{"version":3,"sources":["Components/JokeCard/JokeCard.module.css","Api/ChuckNorris.api.js","Components/SearchMethod/SearchMethod.jsx","redux/actions.js","Components/SearchMethod/SearchMethodContainer.js","Components/JokeCard/JokeCardContainer.js","Components/JokeCard/JokeCard.jsx","Components/Jokes/JokesContainer.js","Components/Jokes/Jokes.jsx","Components/Favourite/FavouriteContainer.js","Components/Favourite/Favourite.jsx","Components/App/App.jsx","Api/localStorage.js","redux/changeFavouriteReducer.js","redux/resetJokesReducer.js","redux/jokesLoadedReducer.js","redux/store.js","index.js","Components/Favourite/Favourite.module.css","Components/App/App.module.css","Components/SearchMethod/SearchMethod.module.css","transitions/slideDown.module.css","transitions/slideLeft.module.css","transitions/slideRight.module.css"],"names":["module","exports","baseURL","filterJoke","joke","updated_at","id","url","value","categories","getRandom","a","axios","get","res","data","getCategories","getByCategory","category","getByQuery","query","result","slice","map","Methods","useStyles","makeStyles","tabsRoot","minHeight","display","flexContainer","flexWrap","indicator","root","color","border","borderRadius","marginRight","padding","fontFamily","fontStyle","fontWeight","fontSize","minWidth","lineHeight","marginBottom","letterSpacing","transition","selected","backgroundColor","Type","connect","dispatch","reset","jokes","type","payload","resetJokes","load","isLoaded","jokesLoaded","useState","method","setMethod","activeCategory","setActiveCategory","inputValue","setInputValue","setCategories","classes","handleMethodChange","event","target","fetches","handleSubmit","e","preventDefault","navigator","onLine","length","NotificationManager","error","className","styles","Form","RadioGroup","aria-label","onChange","FormControlLabel","control","Radio","label","CSSTransition","in","unmountOnExit","timeout","classNames","SlideDown","Tabs","newValue","index","Tab","key","inputField","placeholder","onInput","onClick","submitBtn","enterTimeout","leaveTimeout","state","favouriteJokes","addFJ","addJoke","delFJ","isInFavourite","card","flag","find","hoursAgo","Math","floor","Date","now","parse","CardContainer","style","favourBtn","faHeart","ContentContainer","commentIconWrapper","line","faComment","jokeId","href","jokeContent","BootomContainer","lastUpdate","Category","slideRight","isOpen","setOpen","React","desktopSize","setDesktopSize","useLayoutEffect","update","window","innerWidth","addEventListener","removeEventListener","Favourite","slideLeft","overlay","underOverlay","HeaderContainer","Burger","BurgerOpen","Header","JokesContainer","App","AppContainer","Title","Greeting","Propmting","set","obj","localStorage","setItem","JSON","stringify","changeFavouriteReducer","action","newJokes","undefined","getItem","lg","filter","resetJokesReducer","jokesLoadedReducer","loaded","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bf8f203.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardContainer\":\"JokeCard_CardContainer__HOLHi\",\"ContentContainer\":\"JokeCard_ContentContainer__pWi06\",\"faHeart\":\"JokeCard_faHeart__Cy2sy\",\"faComment\":\"JokeCard_faComment__FTX7h\",\"favourBtn\":\"JokeCard_favourBtn__wMvdO\",\"commentIconWrapper\":\"JokeCard_commentIconWrapper__3vQYN\",\"line\":\"JokeCard_line__1P5BF\",\"jokeId\":\"JokeCard_jokeId__3A0p3\",\"jokeContent\":\"JokeCard_jokeContent__2bDRM\",\"BootomContainer\":\"JokeCard_BootomContainer__2ha8Y\",\"lastUpdate\":\"JokeCard_lastUpdate__23WhR\",\"Category\":\"JokeCard_Category___pfNY\"};","import axios from \"axios\";\r\n\r\nconst baseURL = \"https://api.chucknorris.io/jokes\";\r\nconst countLimit = 50;\r\n\r\nconst filterJoke = joke => ({\r\n    updated_at: joke.updated_at,\r\n    id: joke.id,\r\n    url: joke.url,\r\n    value: joke.value,\r\n    categories: joke.categories,\r\n});\r\n\r\nconst getRandom = async () => {\r\n    const url = `${baseURL}/random`;\r\n    const res = await axios.get(url);\r\n    return [filterJoke(res.data)];\r\n};\r\n\r\nconst getCategories = async () => {\r\n    const url = `${baseURL}/categories`;\r\n    const res = await axios.get(url);\r\n    return res.data;\r\n};\r\n\r\nconst getByCategory = async (category) => {\r\n    const url = `${baseURL}/random?category=${category}`;\r\n    const res = await axios.get(url);\r\n    return [filterJoke(res.data)];\r\n};\r\n\r\nconst getByQuery = async (query) => {\r\n    const url = `${baseURL}/search?query=${query}`;\r\n    try {\r\n        const res = await axios.get(url);\r\n        return res.data.result.slice(0, countLimit).map(joke => filterJoke(joke));\r\n    } catch (e) {\r\n        return [];\r\n    }\r\n};\r\n\r\nexport default {getRandom, getCategories, getByCategory, getByQuery};","import React, {useState} from \"react\";\r\nimport {Radio, RadioGroup, FormControlLabel, Tabs, Tab} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport styles from \"./SearchMethod.module.css\";\r\nimport SlideDown from \"../../transitions/slideDown.module.css\";\r\nimport fetches from \"../../Api/ChuckNorris.api\";\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\n\r\n\r\nconst Methods = {\r\n    random: \"Random\",\r\n    fromCategories: \"From categories\",\r\n    search: \"Search\",\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    tabsRoot: {\r\n        minHeight: \"auto\",\r\n        display: \"flex\",\r\n    },\r\n    flexContainer: {\r\n        flexWrap: \"wrap\",\r\n    },\r\n    indicator: {\r\n        display: \"none\",\r\n    },\r\n    root: {\r\n        color: \"#ABABAB\",\r\n        border: \"2px solid #F8F8F8\",\r\n        borderRadius: 6,\r\n        marginRight: 10,\r\n        padding: \"6px 15px\",\r\n        fontFamily: \"Roboto\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 500,\r\n        fontSize: 12,\r\n        minHeight: \"inherit\",\r\n        minWidth: \"auto !important\",\r\n        lineHeight: \"16px\",\r\n        marginBottom: 10,\r\n        letterSpacing: 2,\r\n        transition: \"background-color 500ms\",\r\n    },\r\n    selected: {\r\n        backgroundColor: \"#F8F8F8\",\r\n    },\r\n}));\r\n\r\nconst SearchMethod = ({reset, load}) => {\r\n    const [method, setMethod] = useState(Methods.random);\r\n    const [activeCategory, setActiveCategory] = useState(0);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [categories, setCategories] = useState([]);\r\n    const classes = useStyles();\r\n    const handleMethodChange = async event => {\r\n        setMethod(event.target.value);\r\n        if (event.target.value === Methods.fromCategories) {\r\n            setCategories(await fetches.getCategories());\r\n        }\r\n    };\r\n\r\n    const handleCategoryChange = (event, newValue) => {\r\n        setActiveCategory(newValue);\r\n    };\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        load(false);\r\n        let jokes = [];\r\n        if (navigator.onLine) {\r\n            switch (method) {\r\n                case Methods.random:\r\n                    jokes = await fetches.getRandom();\r\n                    break;\r\n                case Methods.fromCategories:\r\n                    jokes = await fetches.getByCategory(categories[activeCategory]);\r\n                    break;\r\n                case Methods.search:\r\n                    jokes = await fetches.getByQuery(inputValue);\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            if (!jokes.length) {\r\n                NotificationManager.error('Try another query', 'There is no results', 3000);\r\n            }\r\n        } else {\r\n            NotificationManager.error('Connection error', 'You have no connection to the internet.', 3000);\r\n        }\r\n\r\n        reset(jokes);\r\n        load(true);\r\n    };\r\n    return (\r\n        <form className={styles.Form}>\r\n            <RadioGroup aria-label=\"method\" value={method} onChange={handleMethodChange}>\r\n                <FormControlLabel value={Methods.random} control={<Radio/>} label={Methods.random}/>\r\n                <FormControlLabel value={Methods.fromCategories} control={<Radio/>} label={Methods.fromCategories}/>\r\n                <CSSTransition in={method === Methods.fromCategories} unmountOnExit timeout={200}\r\n                               classNames={SlideDown}>\r\n                    <Tabs value={activeCategory} color=\"primary\"\r\n                          onChange={handleCategoryChange} classes={{\r\n                        root: classes.tabsRoot,\r\n                        flexContainer: classes.flexContainer,\r\n                        indicator: classes.indicator,\r\n                    }}>\r\n                        {categories.map((category, index) =>\r\n                            <Tab key={index} label={category} classes={{\r\n                                root: classes.root,\r\n                                selected: classes.selected,\r\n                            }}/>)}\r\n                    </Tabs>\r\n                </CSSTransition>\r\n                <FormControlLabel value={Methods.search} control={<Radio/>} label={Methods.search}/>\r\n            </RadioGroup>\r\n            <CSSTransition in={method === Methods.search} unmountOnExit timeout={200} classNames={SlideDown}>\r\n                <input className={styles.inputField} placeholder=\"Free text search...\"\r\n                       onInput={e => setInputValue(e.target.value)}/>\r\n            </CSSTransition>\r\n            <button type=\"submit\" onClick={handleSubmit} className={styles.submitBtn}>\r\n                Get a joke\r\n            </button>\r\n            <NotificationContainer enterTimeout={250} leaveTimeout={250}/>\r\n        </form>\r\n    );\r\n};\r\n\r\nSearchMethod.propTypes = {\r\n    reset: PropTypes.func.isRequired,\r\n    load: PropTypes.func.isRequired,\r\n};\r\n\r\nexport {SearchMethod};","export const Type = {\r\n    ADD_JOKE: \"ADD_JOKE\",\r\n    DELETE_JOKE: \"DELETE_JOKE\",\r\n    RESET_JOKES: \"RESET_JOKES\",\r\n    JOKES_LOADED: \"JOKES_LOADED\",\r\n};\r\n\r\nexport const addJoke = joke => ({\r\n    type: Type.ADD_JOKE,\r\n    payload: joke,\r\n});\r\n\r\nexport const deleteJoke = jokeId => ({\r\n    type: Type.DELETE_JOKE,\r\n    payload: jokeId,\r\n});\r\n\r\nexport const resetJokes = jokes => ({\r\n    type: Type.RESET_JOKES,\r\n    payload: jokes,\r\n});\r\n\r\nexport const jokesLoaded = isLoaded => ({\r\n    type: Type.JOKES_LOADED,\r\n    payload: isLoaded,\r\n})","import {SearchMethod} from \"./SearchMethod\";\r\nimport {connect} from \"react-redux\";\r\nimport {resetJokes, jokesLoaded} from \"../../redux/actions\";\r\n\r\nconst mDTP = dispatch => ({\r\n    reset: jokes => dispatch(resetJokes(jokes)),\r\n    load: isLoaded => dispatch(jokesLoaded(isLoaded)),\r\n});\r\n\r\nexport default connect(null, mDTP)(SearchMethod);","import {JokeCard} from \"./JokeCard\";\r\nimport {deleteJoke, addJoke} from \"../../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mSTP = state => ({\r\n    favouriteJokes: state.favouriteJokes,\r\n})\r\n\r\nconst mDTP = dispatch => ({\r\n    addFJ: joke => dispatch(addJoke(joke)),\r\n    delFJ: id => dispatch(deleteJoke(id)),\r\n})\r\n\r\nexport default connect(mSTP, mDTP)(JokeCard);","import React from \"react\";\r\nimport styles from \"./JokeCard.module.css\";\r\nimport {FaRegHeart, FaHeart, FaRegCommentAlt} from \"react-icons/fa\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst JokeCard = ({favouriteJokes, delFJ, addFJ, isInFavourite = false, card}) => {\r\n    const {updated_at, id, url, value, categories} = card;\r\n    const handleChange = () => {\r\n        if (flag) {\r\n            delFJ(id);\r\n        } else {\r\n            addFJ(card);\r\n        }\r\n        flag = !flag;\r\n    };\r\n    let flag = !!favouriteJokes.find(joke => joke.id === id);\r\n    const hoursAgo = Math.floor((Date.now() - Date.parse(updated_at)) / (1000 * 60 * 60));\r\n    return (\r\n        <div className={styles.CardContainer} style={{backgroundColor: (isInFavourite ? \"#FFF\" : \"#F8F8F8\")}}>\r\n            <button onClick={handleChange} className={styles.favourBtn}>\r\n                {flag ? <FaHeart className={styles.faHeart}/> : <FaRegHeart className={styles.faHeart}/>}\r\n            </button>\r\n            <div className={styles.ContentContainer}>\r\n                <div className={styles.commentIconWrapper}\r\n                     style={{backgroundColor: (isInFavourite ? \"#F8F8F8\" : \"#FFF\")}}>\r\n                    <div className={styles.line}/>\r\n                    <FaRegCommentAlt className={styles.faComment}/>\r\n                </div>\r\n                <div>\r\n                    <div className={styles.jokeId}>ID: <a href={url}>{id}</a></div>\r\n                    <p className={styles.jokeContent}>{value}</p>\r\n                    <div className={styles.BootomContainer}>\r\n                        <span className={styles.lastUpdate}>Last update: {hoursAgo} hours ago</span>\r\n                        {categories.map((category, index) =>\r\n                            <div className={styles.Category} key={index}\r\n                                 style={{backgroundColor: (isInFavourite ? \"#F8F8F8\" : \"#FFF\")}}>\r\n                                {category}\r\n                            </div>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nJokeCard.propTypes = {\r\n    favouriteJokes: PropTypes.arrayOf(PropTypes.shape({\r\n        updated_at: PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired,\r\n        value: PropTypes.string.isRequired,\r\n        categories: PropTypes.arrayOf(PropTypes.string),\r\n    })).isRequired,\r\n    delFJ: PropTypes.func.isRequired,\r\n    addFJ: PropTypes.func.isRequired,\r\n    isInFavourite: PropTypes.bool,\r\n    card: PropTypes.shape({\r\n        updated_at: PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired,\r\n        value: PropTypes.string.isRequired,\r\n        categories: PropTypes.arrayOf(PropTypes.string),\r\n    }).isRequired,\r\n};\r\n\r\nexport {JokeCard};","import {Jokes} from \"./Jokes\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mSTP = state => ({\r\n    jokes: state.jokes,\r\n    jokesLoaded: state.jokesLoaded,\r\n});\r\n\r\nexport default connect(mSTP)(Jokes);","import React from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport slideRight from \"../../transitions/slideRight.module.css\";\r\nimport JokeCard from \"../JokeCard/JokeCardContainer\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Jokes = ({jokes, jokesLoaded}) => {\r\n    return (\r\n        <CSSTransition in={jokesLoaded} timeout={400} classNames={slideRight}>\r\n            <div>\r\n                {jokes.map((joke, index) =>\r\n                    <JokeCard key={index} card={joke}/>\r\n                )}\r\n            </div>\r\n        </CSSTransition>\r\n    );\r\n};\r\n\r\nJokes.propTypes = {\r\n    jokes: PropTypes.arrayOf(PropTypes.shape({\r\n        updated_at: PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired,\r\n        value: PropTypes.string.isRequired,\r\n        categories: PropTypes.arrayOf(PropTypes.string),\r\n    })),\r\n};\r\n\r\nexport {Jokes};","import {Favourite} from \"./Favourite\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mSTP = state => ({\r\n    favouriteJokes: state.favouriteJokes,\r\n});\r\n\r\nexport default connect(mSTP)(Favourite);","import React, {useState, useLayoutEffect} from \"react\";\r\nimport styles from \"./Favourite.module.css\";\r\nimport JokeCard from \"../JokeCard/JokeCardContainer\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport slideLeft from \"../../transitions/slideLeft.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Favourite = ({favouriteJokes}) => {\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [desktopSize, setDesktopSize] = React.useState(false);\r\n\r\n    useLayoutEffect(() => {\r\n        const update = () => {\r\n            setDesktopSize(window.innerWidth >= 1440);\r\n        };\r\n        window.addEventListener('resize', update);\r\n        update();\r\n        return () => {\r\n            window.removeEventListener('resize', update);\r\n        };\r\n    }, []);\r\n    return (\r\n        favouriteJokes.length ?\r\n            <div className={styles.Favourite}>\r\n                <CSSTransition in={!desktopSize && isOpen} unmountOnExit timeout={400} classNames={slideLeft}>\r\n                    <div className={styles.overlay} onClick={e => {\r\n                        e.target.className === styles.overlay && setOpen(!isOpen);\r\n                    }}/>\r\n                </CSSTransition>\r\n\r\n                <div className={styles.underOverlay}>\r\n                    <div className={styles.HeaderContainer}\r\n                         style={desktopSize || isOpen ? {backgroundColor: \"#F8F8F8\"} : {}}>\r\n                        <button className={`${styles.Burger} ${isOpen ? styles.BurgerOpen : \"\"}`}\r\n                                type=\"button\" onClick={() => setOpen(!isOpen)}/>\r\n                        <h3 className={styles.Header}>Favourite</h3>\r\n                    </div>\r\n                    <CSSTransition in={isOpen || desktopSize} unmountOnExit timeout={400} classNames={slideLeft}>\r\n                        <div className={styles.JokesContainer}>\r\n                            {favouriteJokes.map((joke, index) => <JokeCard key={index} isInFavourite card={joke}/>)}\r\n                        </div>\r\n                    </CSSTransition>\r\n                </div>\r\n            </div> :\r\n            <span/>\r\n    );\r\n};\r\n\r\nFavourite.propTypes = {\r\n    favouriteJokes: PropTypes.arrayOf(PropTypes.shape({\r\n        updated_at: PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired,\r\n        value: PropTypes.string.isRequired,\r\n        categories: PropTypes.arrayOf(PropTypes.string),\r\n    })).isRequired,\r\n};\r\n\r\nexport {Favourite};","import React from 'react';\nimport styles from './App.module.css';\n\nimport SearchMethod from \"../SearchMethod/SearchMethodContainer\";\nimport Jokes from \"../Jokes/JokesContainer\";\nimport Favourite from \"../Favourite/FavouriteContainer\";\n\n\nconst App = () => {\n    return (\n        <div className={styles.AppContainer}>\n            <h2 className={styles.Title}>MSI 2020</h2>\n            <p className={styles.Greeting}>Hey!</p>\n            <p className={styles.Propmting}>Let’s try to find a joke for you:</p>\n            <div className={styles.JokesContainer}>\n                <SearchMethod/>\n                <Jokes/>\n            </div>\n            <Favourite/>\n        </div>\n\n    );\n};\n\nexport default App;\n","const get = (query) => {\r\n    return JSON.parse(localStorage.getItem(query));\r\n}\r\n\r\nconst set = (query, obj) => {\r\n    localStorage.setItem(query, JSON.stringify(obj));\r\n}\r\n\r\nexport {get, set};","import {Type} from \"./actions\";\r\nimport * as lg from \"../Api/localStorage\";\r\n\r\nconst changeFavouriteReducer = (jokes, action) => {\r\n    if (jokes === undefined) {\r\n        jokes = lg.get(\"jokes\") || [];\r\n    }\r\n    let newJokes;\r\n    switch (action.type) {\r\n        case Type.ADD_JOKE:\r\n            newJokes = [...jokes, action.payload];\r\n            lg.set(\"jokes\", newJokes);\r\n            return newJokes;\r\n        case Type.DELETE_JOKE:\r\n            newJokes = jokes.filter(joke => joke.id !== action.payload);\r\n            lg.set(\"jokes\", newJokes);\r\n            return newJokes;\r\n        default:\r\n            return jokes;\r\n    }\r\n};\r\n\r\nexport default changeFavouriteReducer;","import {Type} from \"./actions\";\r\n\r\nconst resetJokesReducer = (jokes=[], action) => {\r\n    switch (action.type) {\r\n        case Type.RESET_JOKES:\r\n            return action.payload;\r\n        default:\r\n            return jokes;\r\n    }\r\n};\r\n\r\nexport default resetJokesReducer;","import {Type} from \"./actions\";\r\n\r\nconst jokesLoadedReducer = (loaded=false, action) => {\r\n    switch (action.type) {\r\n        case Type.JOKES_LOADED:\r\n            return action.payload;\r\n        default:\r\n            return loaded;\r\n    }\r\n};\r\n\r\nexport default jokesLoadedReducer;","import changeFavouriteReducer from \"./changeFavouriteReducer\";\r\nimport resetJokesReducer from \"./resetJokesReducer\";\r\nimport jokesLoadedReducer from \"./jokesLoadedReducer\";\r\nimport {combineReducers, createStore} from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    favouriteJokes: changeFavouriteReducer,\r\n    jokes: resetJokesReducer,\r\n    jokesLoaded: jokesLoadedReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './normalize.css';\nimport App from './Components/App/App';\nimport store from './redux/store';\nimport {Provider} from \"react-redux\";\nimport 'react-notifications/lib/notifications.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Favourite\":\"Favourite_Favourite__2UB2C\",\"HeaderContainer\":\"Favourite_HeaderContainer__10GfD\",\"Burger\":\"Favourite_Burger__3jsz-\",\"BurgerOpen\":\"Favourite_BurgerOpen__xsnWY\",\"Header\":\"Favourite_Header__UBrkp\",\"JokesContainer\":\"Favourite_JokesContainer__1O5RL\",\"overlay\":\"Favourite_overlay__3Gljx\",\"underOverlay\":\"Favourite_underOverlay__2oBlM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"App_AppContainer__zH__X\",\"JokesContainer\":\"App_JokesContainer__33Xqa\",\"Title\":\"App_Title__6qKNK\",\"Greeting\":\"App_Greeting__WYhPz\",\"Propmting\":\"App_Propmting__WCiPO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"SearchMethod_Form__3c9HL\",\"inputField\":\"SearchMethod_inputField__2MNlR\",\"submitBtn\":\"SearchMethod_submitBtn__tFks7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideDown_enter__2Kp-N\",\"enterActive\":\"slideDown_enterActive__Icue-\",\"exit\":\"slideDown_exit__2MlJn\",\"exitActive\":\"slideDown_exitActive__3bEFn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideLeft_enter__2wHW9\",\"enterActive\":\"slideLeft_enterActive__1Ozod\",\"exit\":\"slideLeft_exit__QUBW_\",\"exitActive\":\"slideLeft_exitActive__3t63N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideRight_enter__aFZnC\",\"enterActive\":\"slideRight_enterActive__3ANnf\",\"exit\":\"slideRight_exit__1YXxd\",\"exitActive\":\"slideRight_exitActive__2vHUG\"};"],"sourceRoot":""}